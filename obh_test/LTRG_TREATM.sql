--------------------------------------------------------
--  DDL for Trigger LTRG_TREATM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "LTRG_TREATM" 
AFTER INSERT OR UPDATE OR DELETE ON AMNIS.TREATM FOR EACH ROW
DECLARE
BEGIN
BEGIN
DECLARE
V_TNAME VARCHAR2(30) := 'TREATM';
VALUE_EX EXCEPTION;
INSERT_EXC EXCEPTION;
BEGIN
IF updating THEN
BEGIN
IF   (:new.TREATM_ID IS NULL AND :old.TREATM_ID IS NOT NULL)
  OR (:new.TREATM_ID IS NOT NULL AND :old.TREATM_ID IS NULL)
  OR (:new.TREATM_ID != :old.TREATM_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'TREATM_ID',:old.TREATM_ID,:new.TREATM_ID,v('EPI_ID') );
END IF;
IF   (:new.TREATM_NAME IS NULL AND :old.TREATM_NAME IS NOT NULL)
  OR (:new.TREATM_NAME IS NOT NULL AND :old.TREATM_NAME IS NULL)
  OR (:new.TREATM_NAME != :old.TREATM_NAME) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'TREATM_NAME',:old.TREATM_NAME,:new.TREATM_NAME,v('EPI_ID') );
END IF;
IF   (:new.TREATM_GROUP_ID IS NULL AND :old.TREATM_GROUP_ID IS NOT NULL)
  OR (:new.TREATM_GROUP_ID IS NOT NULL AND :old.TREATM_GROUP_ID IS NULL)
  OR (:new.TREATM_GROUP_ID != :old.TREATM_GROUP_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'TREATM_GROUP_ID',:old.TREATM_GROUP_ID,:new.TREATM_GROUP_ID,v('EPI_ID') );
END IF;
IF   (:new.TREATM_TYPE_ID IS NULL AND :old.TREATM_TYPE_ID IS NOT NULL)
  OR (:new.TREATM_TYPE_ID IS NOT NULL AND :old.TREATM_TYPE_ID IS NULL)
  OR (:new.TREATM_TYPE_ID != :old.TREATM_TYPE_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'TREATM_TYPE_ID',:old.TREATM_TYPE_ID,:new.TREATM_TYPE_ID,v('EPI_ID') );
END IF;
IF   (:new.DESCRIPTION IS NULL AND :old.DESCRIPTION IS NOT NULL)
  OR (:new.DESCRIPTION IS NOT NULL AND :old.DESCRIPTION IS NULL)
  OR (:new.DESCRIPTION != :old.DESCRIPTION) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'DESCRIPTION',:old.DESCRIPTION,:new.DESCRIPTION,v('EPI_ID') );
END IF;
IF   (:new.STATUS_ID IS NULL AND :old.STATUS_ID IS NOT NULL)
  OR (:new.STATUS_ID IS NOT NULL AND :old.STATUS_ID IS NULL)
  OR (:new.STATUS_ID != :old.STATUS_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'STATUS_ID',:old.STATUS_ID,:new.STATUS_ID,v('EPI_ID') );
END IF;
IF   (:new.CRU IS NULL AND :old.CRU IS NOT NULL)
  OR (:new.CRU IS NOT NULL AND :old.CRU IS NULL)
  OR (:new.CRU != :old.CRU) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'CRU',:old.CRU,:new.CRU,v('EPI_ID') );
END IF;
IF   (:new.MDU IS NULL AND :old.MDU IS NOT NULL)
  OR (:new.MDU IS NOT NULL AND :old.MDU IS NULL)
  OR (:new.MDU != :old.MDU) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'MDU',:old.MDU,:new.MDU,v('EPI_ID') );
END IF;
IF   (:new.WK_TB_CODE IS NULL AND :old.WK_TB_CODE IS NOT NULL)
  OR (:new.WK_TB_CODE IS NOT NULL AND :old.WK_TB_CODE IS NULL)
  OR (:new.WK_TB_CODE != :old.WK_TB_CODE) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'WK_TB_CODE',:old.WK_TB_CODE,:new.WK_TB_CODE,v('EPI_ID') );
END IF;
IF   (:new.SUBJ1_ID IS NULL AND :old.SUBJ1_ID IS NOT NULL)
  OR (:new.SUBJ1_ID IS NOT NULL AND :old.SUBJ1_ID IS NULL)
  OR (:new.SUBJ1_ID != :old.SUBJ1_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'SUBJ1_ID',:old.SUBJ1_ID,:new.SUBJ1_ID,v('EPI_ID') );
END IF;
IF   (:new.TYPE1_ID IS NULL AND :old.TYPE1_ID IS NOT NULL)
  OR (:new.TYPE1_ID IS NOT NULL AND :old.TYPE1_ID IS NULL)
  OR (:new.TYPE1_ID != :old.TYPE1_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'TYPE1_ID',:old.TYPE1_ID,:new.TYPE1_ID,v('EPI_ID') );
END IF;
IF   (:new.SUBJ2_ID IS NULL AND :old.SUBJ2_ID IS NOT NULL)
  OR (:new.SUBJ2_ID IS NOT NULL AND :old.SUBJ2_ID IS NULL)
  OR (:new.SUBJ2_ID != :old.SUBJ2_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'SUBJ2_ID',:old.SUBJ2_ID,:new.SUBJ2_ID,v('EPI_ID') );
END IF;
IF   (:new.TYPE2_ID IS NULL AND :old.TYPE2_ID IS NOT NULL)
  OR (:new.TYPE2_ID IS NOT NULL AND :old.TYPE2_ID IS NULL)
  OR (:new.TYPE2_ID != :old.TYPE2_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'TYPE2_ID',:old.TYPE2_ID,:new.TYPE2_ID,v('EPI_ID') );
END IF;
IF   (:new.STATE_START_ID IS NULL AND :old.STATE_START_ID IS NOT NULL)
  OR (:new.STATE_START_ID IS NOT NULL AND :old.STATE_START_ID IS NULL)
  OR (:new.STATE_START_ID != :old.STATE_START_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'STATE_START_ID',:old.STATE_START_ID,:new.STATE_START_ID,v('EPI_ID') );
END IF;
IF   (:new.STATE_END_ID IS NULL AND :old.STATE_END_ID IS NOT NULL)
  OR (:new.STATE_END_ID IS NOT NULL AND :old.STATE_END_ID IS NULL)
  OR (:new.STATE_END_ID != :old.STATE_END_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'STATE_END_ID',:old.STATE_END_ID,:new.STATE_END_ID,v('EPI_ID') );
END IF;
IF   (:new.TIME_START IS NULL AND :old.TIME_START IS NOT NULL)
  OR (:new.TIME_START IS NOT NULL AND :old.TIME_START IS NULL)
  OR (:new.TIME_START != :old.TIME_START) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'TIME_START',:old.TIME_START,:new.TIME_START,v('EPI_ID') );
END IF;
IF   (:new.TIME_END IS NULL AND :old.TIME_END IS NOT NULL)
  OR (:new.TIME_END IS NOT NULL AND :old.TIME_END IS NULL)
  OR (:new.TIME_END != :old.TIME_END) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'TIME_END',:old.TIME_END,:new.TIME_END,v('EPI_ID') );
END IF;
IF   (:new.EPI_ID IS NULL AND :old.EPI_ID IS NOT NULL)
  OR (:new.EPI_ID IS NOT NULL AND :old.EPI_ID IS NULL)
  OR (:new.EPI_ID != :old.EPI_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'EPI_ID',:old.EPI_ID,:new.EPI_ID,v('EPI_ID') );
END IF;
IF   (:new.MM_ID IS NULL AND :old.MM_ID IS NOT NULL)
  OR (:new.MM_ID IS NOT NULL AND :old.MM_ID IS NULL)
  OR (:new.MM_ID != :old.MM_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'MM_ID',:old.MM_ID,:new.MM_ID,v('EPI_ID') );
END IF;
IF   (:new.TREATM_CATEGORY_ID IS NULL AND :old.TREATM_CATEGORY_ID IS NOT NULL)
  OR (:new.TREATM_CATEGORY_ID IS NOT NULL AND :old.TREATM_CATEGORY_ID IS NULL)
  OR (:new.TREATM_CATEGORY_ID != :old.TREATM_CATEGORY_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'U',admin_pkg.apex_user,
'TREATM_CATEGORY_ID',:old.TREATM_CATEGORY_ID,:new.TREATM_CATEGORY_ID,v('EPI_ID') );
END IF;
EXCEPTION
WHEN VALUE_ERROR THEN RAISE VALUE_EX;
WHEN OTHERS THEN RAISE INSERT_EXC;
END;
END IF;
IF deleting THEN
BEGIN
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'TREATM_ID',:old.TREATM_ID,:new.TREATM_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'TREATM_NAME',:old.TREATM_NAME,:new.TREATM_NAME,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'TREATM_GROUP_ID',:old.TREATM_GROUP_ID,:new.TREATM_GROUP_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'TREATM_TYPE_ID',:old.TREATM_TYPE_ID,:new.TREATM_TYPE_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'DESCRIPTION',:old.DESCRIPTION,:new.DESCRIPTION,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'STATUS_ID',:old.STATUS_ID,:new.STATUS_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'CRU',:old.CRU,:new.CRU,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'MDU',:old.MDU,:new.MDU,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'WK_TB_CODE',:old.WK_TB_CODE,:new.WK_TB_CODE,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'SUBJ1_ID',:old.SUBJ1_ID,:new.SUBJ1_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'TYPE1_ID',:old.TYPE1_ID,:new.TYPE1_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'SUBJ2_ID',:old.SUBJ2_ID,:new.SUBJ2_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'TYPE2_ID',:old.TYPE2_ID,:new.TYPE2_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'STATE_START_ID',:old.STATE_START_ID,:new.STATE_START_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'STATE_END_ID',:old.STATE_END_ID,:new.STATE_END_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'TIME_START',:old.TIME_START,:new.TIME_START,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'TIME_END',:old.TIME_END,:new.TIME_END,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'EPI_ID',:old.EPI_ID,:new.EPI_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'MM_ID',:old.MM_ID,:new.MM_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.TREATM_ID,'D',admin_pkg.apex_user,
'TREATM_CATEGORY_ID',:old.TREATM_CATEGORY_ID,:new.TREATM_CATEGORY_ID,v('EPI_ID') );
EXCEPTION
WHEN VALUE_ERROR THEN RAISE VALUE_EX;
WHEN OTHERS THEN RAISE INSERT_EXC;
END;
END IF;
IF inserting THEN
BEGIN
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
 RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.TREATM_ID,'I',admin_pkg.apex_user,
null,null,null,v('EPI_ID') );
EXCEPTION
WHEN VALUE_ERROR THEN RAISE VALUE_EX;
WHEN OTHERS THEN RAISE INSERT_EXC;
END;
END IF;
EXCEPTION
WHEN VALUE_EX THEN
raise_application_error(-20201,'Value error on LOG_TABLE insert:');
WHEN INSERT_EXC THEN
raise_application_error(-20202,'Error on LOG_TABLE insert!');
END;
END;
END;
/
ALTER TRIGGER "LTRG_TREATM" DISABLE;
