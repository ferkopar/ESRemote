--------------------------------------------------------
--  DDL for Trigger LTRG_EPI_TREATM_PARAM
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "LTRG_EPI_TREATM_PARAM" 
AFTER INSERT OR UPDATE OR DELETE ON AMNIS.EPI_TREATM_PARAM FOR EACH ROW
DECLARE
BEGIN
BEGIN
DECLARE
V_TNAME VARCHAR2(30) := 'EPI_TREATM_PARAM';
VALUE_EX EXCEPTION;
INSERT_EXC EXCEPTION;
BEGIN
IF updating THEN
BEGIN
IF   (:new.EPI_TREATM_PARAM_ID IS NULL AND :old.EPI_TREATM_PARAM_ID IS NOT NULL)
  OR (:new.EPI_TREATM_PARAM_ID IS NOT NULL AND :old.EPI_TREATM_PARAM_ID IS NULL)
  OR (:new.EPI_TREATM_PARAM_ID != :old.EPI_TREATM_PARAM_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'EPI_TREATM_PARAM_ID',:old.EPI_TREATM_PARAM_ID,:new.EPI_TREATM_PARAM_ID,v('EPI_ID') );
END IF;
IF   (:new.EPI_TREAMT_ID IS NULL AND :old.EPI_TREAMT_ID IS NOT NULL)
  OR (:new.EPI_TREAMT_ID IS NOT NULL AND :old.EPI_TREAMT_ID IS NULL)
  OR (:new.EPI_TREAMT_ID != :old.EPI_TREAMT_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'EPI_TREAMT_ID',:old.EPI_TREAMT_ID,:new.EPI_TREAMT_ID,v('EPI_ID') );
END IF;
IF   (:new.PARAM_TYPE_ID IS NULL AND :old.PARAM_TYPE_ID IS NOT NULL)
  OR (:new.PARAM_TYPE_ID IS NOT NULL AND :old.PARAM_TYPE_ID IS NULL)
  OR (:new.PARAM_TYPE_ID != :old.PARAM_TYPE_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'PARAM_TYPE_ID',:old.PARAM_TYPE_ID,:new.PARAM_TYPE_ID,v('EPI_ID') );
END IF;
IF   (:new.VALUE IS NULL AND :old.VALUE IS NOT NULL)
  OR (:new.VALUE IS NOT NULL AND :old.VALUE IS NULL)
  OR (:new.VALUE != :old.VALUE) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'VALUE',:old.VALUE,:new.VALUE,v('EPI_ID') );
END IF;
IF   (:new.UNIT IS NULL AND :old.UNIT IS NOT NULL)
  OR (:new.UNIT IS NOT NULL AND :old.UNIT IS NULL)
  OR (:new.UNIT != :old.UNIT) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'UNIT',:old.UNIT,:new.UNIT,v('EPI_ID') );
END IF;
IF   (:new.TREATM_PARAM_ID IS NULL AND :old.TREATM_PARAM_ID IS NOT NULL)
  OR (:new.TREATM_PARAM_ID IS NOT NULL AND :old.TREATM_PARAM_ID IS NULL)
  OR (:new.TREATM_PARAM_ID != :old.TREATM_PARAM_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'TREATM_PARAM_ID',:old.TREATM_PARAM_ID,:new.TREATM_PARAM_ID,v('EPI_ID') );
END IF;
IF   (:new.DESCRIPTION IS NULL AND :old.DESCRIPTION IS NOT NULL)
  OR (:new.DESCRIPTION IS NOT NULL AND :old.DESCRIPTION IS NULL)
  OR (:new.DESCRIPTION != :old.DESCRIPTION) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'DESCRIPTION',:old.DESCRIPTION,:new.DESCRIPTION,v('EPI_ID') );
END IF;
IF   (:new.STATUS_ID IS NULL AND :old.STATUS_ID IS NOT NULL)
  OR (:new.STATUS_ID IS NOT NULL AND :old.STATUS_ID IS NULL)
  OR (:new.STATUS_ID != :old.STATUS_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'STATUS_ID',:old.STATUS_ID,:new.STATUS_ID,v('EPI_ID') );
END IF;
IF   (:new.CRU IS NULL AND :old.CRU IS NOT NULL)
  OR (:new.CRU IS NOT NULL AND :old.CRU IS NULL)
  OR (:new.CRU != :old.CRU) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'CRU',:old.CRU,:new.CRU,v('EPI_ID') );
END IF;
IF   (:new.MDU IS NULL AND :old.MDU IS NOT NULL)
  OR (:new.MDU IS NOT NULL AND :old.MDU IS NULL)
  OR (:new.MDU != :old.MDU) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'MDU',:old.MDU,:new.MDU,v('EPI_ID') );
END IF;
IF   (:new.W_PARAM_TYPE IS NULL AND :old.W_PARAM_TYPE IS NOT NULL)
  OR (:new.W_PARAM_TYPE IS NOT NULL AND :old.W_PARAM_TYPE IS NULL)
  OR (:new.W_PARAM_TYPE != :old.W_PARAM_TYPE) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'W_PARAM_TYPE',:old.W_PARAM_TYPE,:new.W_PARAM_TYPE,v('EPI_ID') );
END IF;
IF   (:new.W_TREATM_ID IS NULL AND :old.W_TREATM_ID IS NOT NULL)
  OR (:new.W_TREATM_ID IS NOT NULL AND :old.W_TREATM_ID IS NULL)
  OR (:new.W_TREATM_ID != :old.W_TREATM_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'U',admin_pkg.apex_user,
'W_TREATM_ID',:old.W_TREATM_ID,:new.W_TREATM_ID,v('EPI_ID') );
END IF;
EXCEPTION
WHEN VALUE_ERROR THEN RAISE VALUE_EX;
WHEN OTHERS THEN RAISE INSERT_EXC;
END;
END IF;
IF deleting THEN
BEGIN
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'EPI_TREATM_PARAM_ID',:old.EPI_TREATM_PARAM_ID,:new.EPI_TREATM_PARAM_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'EPI_TREAMT_ID',:old.EPI_TREAMT_ID,:new.EPI_TREAMT_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'PARAM_TYPE_ID',:old.PARAM_TYPE_ID,:new.PARAM_TYPE_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'VALUE',:old.VALUE,:new.VALUE,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'UNIT',:old.UNIT,:new.UNIT,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'TREATM_PARAM_ID',:old.TREATM_PARAM_ID,:new.TREATM_PARAM_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'DESCRIPTION',:old.DESCRIPTION,:new.DESCRIPTION,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'STATUS_ID',:old.STATUS_ID,:new.STATUS_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'CRU',:old.CRU,:new.CRU,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'MDU',:old.MDU,:new.MDU,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'W_PARAM_TYPE',:old.W_PARAM_TYPE,:new.W_PARAM_TYPE,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.EPI_TREATM_PARAM_ID,'D',admin_pkg.apex_user,
'W_TREATM_ID',:old.W_TREATM_ID,:new.W_TREATM_ID,v('EPI_ID') );
EXCEPTION
WHEN VALUE_ERROR THEN RAISE VALUE_EX;
WHEN OTHERS THEN RAISE INSERT_EXC;
END;
END IF;
IF inserting THEN
BEGIN
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
 RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.EPI_TREATM_PARAM_ID,'I',admin_pkg.apex_user,
null,null,null,v('EPI_ID') );
EXCEPTION
WHEN VALUE_ERROR THEN RAISE VALUE_EX;
WHEN OTHERS THEN RAISE INSERT_EXC;
END;
END IF;
EXCEPTION
WHEN VALUE_EX THEN
raise_application_error(-20201,'Value error on LOG_TABLE insert:');
WHEN INSERT_EXC THEN
raise_application_error(-20202,'Error on LOG_TABLE insert!');
END;
END;
END;
/
ALTER TRIGGER "LTRG_EPI_TREATM_PARAM" ENABLE;
