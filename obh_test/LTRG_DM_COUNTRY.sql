--------------------------------------------------------
--  DDL for Trigger LTRG_DM_COUNTRY
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "LTRG_DM_COUNTRY" 
AFTER INSERT OR UPDATE OR DELETE ON AMNIS.DM_COUNTRY FOR EACH ROW
DECLARE
BEGIN
BEGIN
DECLARE
V_TNAME VARCHAR2(30) := 'DM_COUNTRY';
VALUE_EX EXCEPTION;
INSERT_EXC EXCEPTION;
BEGIN
IF updating THEN
BEGIN
IF   (:new.COUNTRY_ID IS NULL AND :old.COUNTRY_ID IS NOT NULL)
  OR (:new.COUNTRY_ID IS NOT NULL AND :old.COUNTRY_ID IS NULL)
  OR (:new.COUNTRY_ID != :old.COUNTRY_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'COUNTRY_ID',:old.COUNTRY_ID,:new.COUNTRY_ID,v('EPI_ID') );
END IF;
IF   (:new.COUNTRY_NAME IS NULL AND :old.COUNTRY_NAME IS NOT NULL)
  OR (:new.COUNTRY_NAME IS NOT NULL AND :old.COUNTRY_NAME IS NULL)
  OR (:new.COUNTRY_NAME != :old.COUNTRY_NAME) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'COUNTRY_NAME',:old.COUNTRY_NAME,:new.COUNTRY_NAME,v('EPI_ID') );
END IF;
IF   (:new.COUNTRY_TRICODE IS NULL AND :old.COUNTRY_TRICODE IS NOT NULL)
  OR (:new.COUNTRY_TRICODE IS NOT NULL AND :old.COUNTRY_TRICODE IS NULL)
  OR (:new.COUNTRY_TRICODE != :old.COUNTRY_TRICODE) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'COUNTRY_TRICODE',:old.COUNTRY_TRICODE,:new.COUNTRY_TRICODE,v('EPI_ID') );
END IF;
IF   (:new.COUNTRY_DUOCODE IS NULL AND :old.COUNTRY_DUOCODE IS NOT NULL)
  OR (:new.COUNTRY_DUOCODE IS NOT NULL AND :old.COUNTRY_DUOCODE IS NULL)
  OR (:new.COUNTRY_DUOCODE != :old.COUNTRY_DUOCODE) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'COUNTRY_DUOCODE',:old.COUNTRY_DUOCODE,:new.COUNTRY_DUOCODE,v('EPI_ID') );
END IF;
IF   (:new.TELEPHONE IS NULL AND :old.TELEPHONE IS NOT NULL)
  OR (:new.TELEPHONE IS NOT NULL AND :old.TELEPHONE IS NULL)
  OR (:new.TELEPHONE != :old.TELEPHONE) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'TELEPHONE',:old.TELEPHONE,:new.TELEPHONE,v('EPI_ID') );
END IF;
IF   (:new.CURRENCY_CODE IS NULL AND :old.CURRENCY_CODE IS NOT NULL)
  OR (:new.CURRENCY_CODE IS NOT NULL AND :old.CURRENCY_CODE IS NULL)
  OR (:new.CURRENCY_CODE != :old.CURRENCY_CODE) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'CURRENCY_CODE',:old.CURRENCY_CODE,:new.CURRENCY_CODE,v('EPI_ID') );
END IF;
IF   (:new.CURRENCY_NAME IS NULL AND :old.CURRENCY_NAME IS NOT NULL)
  OR (:new.CURRENCY_NAME IS NOT NULL AND :old.CURRENCY_NAME IS NULL)
  OR (:new.CURRENCY_NAME != :old.CURRENCY_NAME) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'CURRENCY_NAME',:old.CURRENCY_NAME,:new.CURRENCY_NAME,v('EPI_ID') );
END IF;
IF   (:new.DESCRIPTION IS NULL AND :old.DESCRIPTION IS NOT NULL)
  OR (:new.DESCRIPTION IS NOT NULL AND :old.DESCRIPTION IS NULL)
  OR (:new.DESCRIPTION != :old.DESCRIPTION) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'DESCRIPTION',:old.DESCRIPTION,:new.DESCRIPTION,v('EPI_ID') );
END IF;
IF   (:new.FROM_DATE IS NULL AND :old.FROM_DATE IS NOT NULL)
  OR (:new.FROM_DATE IS NOT NULL AND :old.FROM_DATE IS NULL)
  OR (:new.FROM_DATE != :old.FROM_DATE) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'FROM_DATE',:old.FROM_DATE,:new.FROM_DATE,v('EPI_ID') );
END IF;
IF   (:new.TO_DATE IS NULL AND :old.TO_DATE IS NOT NULL)
  OR (:new.TO_DATE IS NOT NULL AND :old.TO_DATE IS NULL)
  OR (:new.TO_DATE != :old.TO_DATE) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'TO_DATE',:old.TO_DATE,:new.TO_DATE,v('EPI_ID') );
END IF;
IF   (:new.CRU IS NULL AND :old.CRU IS NOT NULL)
  OR (:new.CRU IS NOT NULL AND :old.CRU IS NULL)
  OR (:new.CRU != :old.CRU) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'CRU',:old.CRU,:new.CRU,v('EPI_ID') );
END IF;
IF   (:new.MDU IS NULL AND :old.MDU IS NOT NULL)
  OR (:new.MDU IS NOT NULL AND :old.MDU IS NULL)
  OR (:new.MDU != :old.MDU) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'MDU',:old.MDU,:new.MDU,v('EPI_ID') );
END IF;
IF   (:new.W_ERROR IS NULL AND :old.W_ERROR IS NOT NULL)
  OR (:new.W_ERROR IS NOT NULL AND :old.W_ERROR IS NULL)
  OR (:new.W_ERROR != :old.W_ERROR) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'W_ERROR',:old.W_ERROR,:new.W_ERROR,v('EPI_ID') );
END IF;
IF   (:new.STATUS_ID IS NULL AND :old.STATUS_ID IS NOT NULL)
  OR (:new.STATUS_ID IS NOT NULL AND :old.STATUS_ID IS NULL)
  OR (:new.STATUS_ID != :old.STATUS_ID) THEN 
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'U',admin_pkg.apex_user,
'STATUS_ID',:old.STATUS_ID,:new.STATUS_ID,v('EPI_ID') );
END IF;
EXCEPTION
WHEN VALUE_ERROR THEN RAISE VALUE_EX;
WHEN OTHERS THEN RAISE INSERT_EXC;
END;
END IF;
IF deleting THEN
BEGIN
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'COUNTRY_ID',:old.COUNTRY_ID,:new.COUNTRY_ID,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'COUNTRY_NAME',:old.COUNTRY_NAME,:new.COUNTRY_NAME,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'COUNTRY_TRICODE',:old.COUNTRY_TRICODE,:new.COUNTRY_TRICODE,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'COUNTRY_DUOCODE',:old.COUNTRY_DUOCODE,:new.COUNTRY_DUOCODE,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'TELEPHONE',:old.TELEPHONE,:new.TELEPHONE,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'CURRENCY_CODE',:old.CURRENCY_CODE,:new.CURRENCY_CODE,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'CURRENCY_NAME',:old.CURRENCY_NAME,:new.CURRENCY_NAME,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'DESCRIPTION',:old.DESCRIPTION,:new.DESCRIPTION,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'FROM_DATE',:old.FROM_DATE,:new.FROM_DATE,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'TO_DATE',:old.TO_DATE,:new.TO_DATE,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'CRU',:old.CRU,:new.CRU,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'MDU',:old.MDU,:new.MDU,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'W_ERROR',:old.W_ERROR,:new.W_ERROR,v('EPI_ID') );
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:old.COUNTRY_ID,'D',admin_pkg.apex_user,
'STATUS_ID',:old.STATUS_ID,:new.STATUS_ID,v('EPI_ID') );
EXCEPTION
WHEN VALUE_ERROR THEN RAISE VALUE_EX;
WHEN OTHERS THEN RAISE INSERT_EXC;
END;
END IF;
IF inserting THEN
BEGIN
INSERT INTO LOG_TABLE
(LOG_ID, OPERATION_TIME, TABLE_NAME,
 RECORD_ID, OPERATION_TYPE, USER_NAME,
 COLUMN_NAME, OLD_VALUE, NEW_VALUE,EPI_ID)
VALUES
(SEQ_LTRG_ID.nextval,sysdate,V_TNAME,
:new.COUNTRY_ID,'I',admin_pkg.apex_user,
null,null,null,v('EPI_ID') );
EXCEPTION
WHEN VALUE_ERROR THEN RAISE VALUE_EX;
WHEN OTHERS THEN RAISE INSERT_EXC;
END;
END IF;
EXCEPTION
WHEN VALUE_EX THEN
raise_application_error(-20201,'Value error on LOG_TABLE insert:');
WHEN INSERT_EXC THEN
raise_application_error(-20202,'Error on LOG_TABLE insert!');
END;
END;
END;
/
ALTER TRIGGER "LTRG_DM_COUNTRY" ENABLE;
