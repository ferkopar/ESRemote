--
-- Script was generated by Devart dbForge Studio for Oracle, Version 3.7.472.0
-- Product home page: http://www.devart.com/dbforge/oracle/studio
-- Script date 2015.03.27. 9:54:29
-- Server version: Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production With the Partitioning, Oracle Label Security, OLAP, Data Mining, Oracle Database Vault and Real Application Testing options
-- Client version: 12.1.0.0
-- Please backup your database before running this script
--

--
-- Create trigger "OBH_TEST.TRG_SUBJ_PARAM"
--
CREATE OR REPLACE TRIGGER OBH_TEST.TRG_SUBJ_PARAM
BEFORE INSERT OR UPDATE ON OBH_TEST.SUBJ_PARAM FOR EACH ROW
BEGIN
  IF INSERTING
  THEN
    IF :new.SUBJ_PARAM_ID IS NULL OR :new.SUBJ_PARAM_ID = 0
    THEN
SELECT SEQ_BASE.NEXTVAL
  INTO :NEW.SUBJ_PARAM_ID
  FROM DUAL;
END IF;
     IF :new.FROM_DATE IS NULL THEN
      :new.FROM_DATE := SYSDATE;
   END IF;
   IF :NEW.TO_DATE IS NULL THEN
      :NEW.TO_DATE := TO_DATE('2099.12.31. 23:59:59','YYYY.MM.DD. HH24:MI:SS');
   END IF;
    :new.CRD := SYSTIMESTAMP;
      --LÉTREHOZÁS IDŐPONTJA
    :NEW.CRU := NVL(V('APP_USER'), USER);
 --APEX USER AKI LÉTREHOZZA A REKORDOT
  ELSIF UPDATING
  THEN
    :new.MDD := SYSTIMESTAMP;
      --MÓDOSÍTÁS IDŐPONTJA
    :NEW.MDU := NVL(V('APP_USER'), USER);
 --APEX USER AKI MÓDOSÍT
  END IF;
END TRG_SUBJ_PARAM;


CREATE OR REPLACE FUNCTION OBH_TEST.GET_SUBJECT_NAME (p_subj_id number)
  RETURN varchar2
AS
  v_retval varchar2(255) := 'Nincs név hozzárendelve';
  v_ret varchar2(255);
BEGIN
  begin
   select VALUE INTO v_retval from SUBJ_PARAM WHERE SUBJ_ID = p_subj_id AND PARAM_TYPE_ID = 11501;
   RETURN v_retval;
  exception when others then
   null;
  end;
  
 begin
   select VALUE INTO v_retval from SUBJ_PARAM WHERE SUBJ_ID = p_subj_id AND PARAM_TYPE_ID = 11102;
   select VALUE INTO v_ret from SUBJ_PARAM WHERE SUBJ_ID = p_subj_id AND PARAM_TYPE_ID = 11103;
   v_retval := v_retval || ' ' || v_ret;
   RETURN v_retval ;
  exception when others then
   null;
  end;

  RETURN v_retval;
END;

--
-- Create column "ORDER_NO" on table "OBH_TEST.DM_SUBJECT"
--
ALTER TABLE OBH_TEST.DM_SUBJECT
  ADD ORDER_NO NUMBER(3, 0) DEFAULT 0;

--
-- Create column "VALUE_GROUP_ID" on table "OBH_TEST.DM_SUBJECT"
--
ALTER TABLE OBH_TEST.DM_SUBJECT
  ADD VALUE_GROUP_ID NUMBER(12, 0);

--
-- Create column "DIMENSION_GROUP" on table "OBH_TEST.DM_SUBJECT"
--
ALTER TABLE OBH_TEST.DM_SUBJECT
  ADD DIMENSION_GROUP NUMBER(12, 0);

--
-- Rename column "DIMENSION_GROUP" to "DIMENSION_GROUP_ID" on table "OBH_TEST.DM_SUBJECT"
--
ALTER TABLE OBH_TEST.DM_SUBJECT
  RENAME COLUMN DIMENSION_GROUP TO DIMENSION_GROUP_ID;

--
-- Alter function "OBH_TEST.SEARCH_GROUND_LEVEL_ID"
--
CREATE OR REPLACE FUNCTION OBH_TEST.SEARCH_GROUND_LEVEL_ID (p_super_type_id NUMBER)
  RETURN NUMBER
AS
  v_super_typ_row dm_super_typ%rowtype;
BEGIN
  select * INTO v_super_typ_row FROM DM_SUPER_TYP WHERE SUPER_TYP_ID = p_super_type_id;
  elsif v_super_typ_row.group_id is null then
     return v_super_typ_row.super_typ_id;
  else
     return SEARCH_GROUND_LEVEL_ID (v_super_typ_row.group_id);
  end if;
END;
/